// <auto-generated />
using System;
using ASP.NETCoreWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP.NETCoreWebApp.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Attribute", b =>
                {
                    b.Property<int>("AttributeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("datas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titles")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttributeID");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Brand", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Categori", b =>
                {
                    b.Property<int>("CategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriID");

                    b.ToTable("Categoris");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.DisCountCode", b =>
                {
                    b.Property<int>("DisCountCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("exp_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("gen_date")
                        .HasColumnType("datetime2");

                    b.HasKey("DisCountCodeID");

                    b.ToTable("disCountCodes");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Object", b =>
                {
                    b.Property<int>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributeID")
                        .HasColumnType("int");

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoriID")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObjectID");

                    b.HasIndex("AttributeID")
                        .IsUnique()
                        .HasFilter("[AttributeID] IS NOT NULL");

                    b.HasIndex("BrandID");

                    b.HasIndex("SubCategoriID");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("discountCodeID")
                        .HasColumnType("int");

                    b.Property<string>("paymentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("total_price")
                        .HasColumnType("float");

                    b.HasKey("PaymentID");

                    b.HasIndex("UserID");

                    b.HasIndex("discountCodeID")
                        .IsUnique()
                        .HasFilter("[discountCodeID] IS NOT NULL");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Sell", b =>
                {
                    b.Property<int>("SellID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ObjectID")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("SellID");

                    b.HasIndex("ObjectID");

                    b.HasIndex("PaymentID");

                    b.HasIndex("UserID");

                    b.ToTable("Sells");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.SubCategori", b =>
                {
                    b.Property<int>("SubCategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriID")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategoriID");

                    b.HasIndex("CategoriID");

                    b.ToTable("SubCategoris");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Token", b =>
                {
                    b.Property<int>("TokenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("exp_dateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("gen_dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TokenID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Object", b =>
                {
                    b.HasOne("ASP.NETCoreWebApp.Models.Attribute", "Attribute")
                        .WithOne("Object")
                        .HasForeignKey("ASP.NETCoreWebApp.Models.Object", "AttributeID");

                    b.HasOne("ASP.NETCoreWebApp.Models.Brand", "Brand")
                        .WithMany("Object")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NETCoreWebApp.Models.SubCategori", "SubCategori")
                        .WithMany("Objects")
                        .HasForeignKey("SubCategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Brand");

                    b.Navigation("SubCategori");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Payment", b =>
                {
                    b.HasOne("ASP.NETCoreWebApp.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NETCoreWebApp.Models.DisCountCode", "DisCountCode")
                        .WithOne("Payment")
                        .HasForeignKey("ASP.NETCoreWebApp.Models.Payment", "discountCodeID");

                    b.Navigation("DisCountCode");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Sell", b =>
                {
                    b.HasOne("ASP.NETCoreWebApp.Models.Object", "Object")
                        .WithMany("Sells")
                        .HasForeignKey("ObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NETCoreWebApp.Models.Payment", "Payment")
                        .WithMany("Sells")
                        .HasForeignKey("PaymentID");

                    b.HasOne("ASP.NETCoreWebApp.Models.User", "User")
                        .WithMany("Sells")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Object");

                    b.Navigation("Payment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.SubCategori", b =>
                {
                    b.HasOne("ASP.NETCoreWebApp.Models.Categori", "Categori")
                        .WithMany("subCategoris")
                        .HasForeignKey("CategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categori");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Token", b =>
                {
                    b.HasOne("ASP.NETCoreWebApp.Models.User", "User")
                        .WithOne("token")
                        .HasForeignKey("ASP.NETCoreWebApp.Models.Token", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Attribute", b =>
                {
                    b.Navigation("Object");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Brand", b =>
                {
                    b.Navigation("Object");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Categori", b =>
                {
                    b.Navigation("subCategoris");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.DisCountCode", b =>
                {
                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Object", b =>
                {
                    b.Navigation("Sells");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.Payment", b =>
                {
                    b.Navigation("Sells");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.SubCategori", b =>
                {
                    b.Navigation("Objects");
                });

            modelBuilder.Entity("ASP.NETCoreWebApp.Models.User", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Sells");

                    b.Navigation("token");
                });
#pragma warning restore 612, 618
        }
    }
}
